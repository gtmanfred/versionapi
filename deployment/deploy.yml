---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: backend
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
        tier: backend
    spec:
      containers:
      - name: postgres
        image: docker.io/postgres
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres
              key: user
        - name: POSTGRES_DB
          value: version
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: broker
  labels:
    app: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
        tier: backend
    spec:
      containers:
      - name: rabbitmq
        image: docker.io/rabbitmq
        ports:
        - containerPort: 5672
        env:
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: password
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: user
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    app: celery
spec:
  selector:
    matchLabels:
      app: celery
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: celery
        tier: backend
    spec:
      containers:
      - name: celery
        image: docker.io/gtmanfred/versionapi:0.2.2
        command:
        - celery
        args: ['-A', 'versionapi.celeryapp', 'worker', '-l', 'debug']
        env:
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: password
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: user
        - name: BROKER
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: broker
        - name: BACKEND
          valueFrom:
            secretKeyRef:
              name: postgres
              key: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  selector:
    matchLabels:
      app: api
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: api
        tier: backend
    spec:
      containers:
      - name: api
        image: docker.io/gtmanfred/versionapi:0.2.2
        command:
        - python
        args: ['-m', 'versionapi.app']
        ports:
        - containerPort: 5000
          name: api
        env:
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: password
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: user
        - name: BROKER
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: broker
        - name: BACKEND
          valueFrom:
            secretKeyRef:
              name: postgres
              key: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
      tier: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
        tier: frontend
    spec:
      containers:
      - name: nginx
        image: docker.io/gtmanfred/nginx-versionapi:0.2.2
        ports:
        - containerPort: 80
          name: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app: rabbitmq
    tier: backend
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: broker
  labels:
    app: rabbitmq
    tier: backend
spec:
  ports:
  - port: 5672
    targetPort: 5672
  selector:
    app: rabbitmq
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
spec:
  ports:
    - port: 5000
  selector:
    app: api
    tier: backend
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
    - port: 80
  selector:
    app: nginx
    tier: frontend
  type: LoadBalancer
